;; == external FFI ==

(load "ffi.lisp")

;; == Common Lisp ==

; hoisted functions

(defun |map| (|payload| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œ±| (car |payload|)))
    (let ((|Œì| (cdr |payload|)))
      (let ((|_pL#f| (car |Œ±|)))
        (let ((|_pR#f| (cdr |Œ±|)))
          (cond
            ((eq (car |_pR#f|) '|Nil|)
              (let ((|con2| (cons '|Nil| (vector))))
                (funcall |k| |con2|)))
            ((eq (car |_pR#f|) '|Cons|)
              (let ((|p3| (svref (cdr |_pR#f|) 0)))
                (let ((|p4| (svref (cdr |_pR#f|) 1)))
                  (let ((|u5| nil))
                    (let ((|pair6| (cons |p3| |u5|)))
                      (let ((|_code| (svref (cdr |_pL#f|) 0)))
                        (let ((|Œìc| (svref (cdr |_pL#f|) 1)))
                          (let ((|œÅc| (cons |pair6| |Œìc|)))
                            (labels ((|k1| (|v0|)
                              (let ((|pair8| (cons |_pL#f| |p4|)))
                                (let ((|œÅ| (cons |pair8| |Œì|)))
                                  (labels ((|k3| (|v2|)
                                    (let ((|con10| (cons '|Cons| (vector |v0| |v2|))))
                                      (funcall |k| |con10|))))
                                    (funcall #'|map| |œÅ| #'|k3|))))))
                              (funcall |_code| |œÅc| #'|k1|))))))))))))))))

(defun |foldl| (|payload| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œ±| (car |payload|)))
    (let ((|Œì| (cdr |payload|)))
      (let ((|_pL#f| (car |Œ±|)))
        (let ((|_pR#f| (cdr |Œ±|)))
          (let ((|_pL#init| (car |_pR#f|)))
            (let ((|_pR#init| (cdr |_pR#f|)))
              (cond
                ((eq (car |_pR#init|) '|Nil|)
                  (funcall |k| |_pL#init|))
                ((eq (car |_pR#init|) '|Cons|)
                  (let ((|p13| (svref (cdr |_pR#init|) 0)))
                    (let ((|p14| (svref (cdr |_pR#init|) 1)))
                      (let ((|pair15| (cons |_pL#init| |p13|)))
                        (let ((|_code| (svref (cdr |_pL#f|) 0)))
                          (let ((|Œìc| (svref (cdr |_pL#f|) 1)))
                            (let ((|œÅc| (cons |pair15| |Œìc|)))
                              (labels ((|k5| (|v4|)
                                (let ((|pair18| (cons |v4| |p14|)))
                                  (let ((|pair17| (cons |_pL#f| |pair18|)))
                                    (let ((|œÅ| (cons |pair17| |Œì|)))
                                      (funcall #'|foldl| |œÅ| |k|))))))
                                (funcall |_code| |œÅc| #'|k5|)))))))))))))))))

(defun |fn1000| (|payload| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œ±| (car |payload|)))
    (let ((|_pL#?x‚ÇÄ| (car |Œ±|)))
      (cond
        ((eq (car |_pL#?x‚ÇÄ|) '|Cons|)
          (let ((|p22| (svref (cdr |_pL#?x‚ÇÄ|) 0)))
            (funcall |k| |p22|)))
        (t
          (let ((|u21| nil))
            (funcall |k| |u21|)))))))

(defun |fn1001| (|payload| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œ±| (car |payload|)))
    (let ((|_pL#?x‚ÇÄ| (car |Œ±|)))
      (let ((|c38| 1))
        (let ((|p39| (+ |c38| |_pL#?x‚ÇÄ|)))
          (funcall |k| |p39|))))))

(defun |fn1005| (|payload| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œ±| (car |payload|)))
    (let ((|_pL#?x‚ÇÄ| (car |Œ±|)))
      (let ((|_pR#?x‚ÇÄ| (cdr |Œ±|)))
        (let ((|p44| (+ |_pL#?x‚ÇÄ| |_pR#?x‚ÇÄ|)))
          (funcall |k| |p44|))))))

(defun |fn1009| (|payload| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œ±| (car |payload|)))
    (let ((|_pL#?x‚ÇÄ| (car |Œ±|)))
      (let ((|_pR#?x‚ÇÄ| (cdr |Œ±|)))
        (let ((|p51| (+ |_pL#?x‚ÇÄ| |_pR#?x‚ÇÄ|)))
          (funcall |k| |p51|))))))

; entrypoint
(defun |main| (|arg| |k|)
  (declare (optimize (speed 3) (safety 0) (debug 0)))
  (let ((|Œì| (cons '|ùêÑ| (vector))))
    (let ((|map| (cons '|ùêÇ| (vector #'|map| |Œì|))))
      (let ((|Œì| (cons '|ùêÑ| (vector))))
        (let ((|foldl| (cons '|ùêÇ| (vector #'|foldl| |Œì|))))
          (let ((|c28| 1))
            (let ((|c29| 2))
              (let ((|c30| 3))
                (let ((|c31| 4))
                  (let ((|con32| (cons '|Nil| (vector))))
                    (let ((|con33| (cons '|Cons| (vector |c31| |con32|))))
                      (let ((|con34| (cons '|Cons| (vector |c30| |con33|))))
                        (let ((|con35| (cons '|Cons| (vector |c29| |con34|))))
                          (let ((|con36| (cons '|Cons| (vector |c28| |con35|))))
                            (let ((|Œì| (cons '|ùêÑ| (vector))))
                              (let ((|lam40| (cons '|ùêÇ| (vector #'|fn1001| |Œì|))))
                                (let ((|pair41| (cons |lam40| |con36|)))
                                  (let ((|œÅc1004| (cons |pair41| |Œì|)))
                                    (labels ((|k7| (|v6|)
                                      (let ((|Œì| (cons '|ùêÑ| (vector))))
                                        (let ((|lam45| (cons '|ùêÇ| (vector #'|fn1005| |Œì|))))
                                          (let ((|c46| 0))
                                            (let ((|pair48| (cons |c46| |con36|)))
                                              (let ((|pair47| (cons |lam45| |pair48|)))
                                                (let ((|œÅc1008| (cons |pair47| |Œì|)))
                                                  (labels ((|k9| (|v8|)
                                                    (let ((|Œì| (cons '|ùêÑ| (vector))))
                                                      (let ((|lam52| (cons '|ùêÇ| (vector #'|fn1009| |Œì|))))
                                                        (let ((|c53| 0))
                                                          (let ((|pair55| (cons |c53| |v6|)))
                                                            (let ((|pair54| (cons |lam52| |pair55|)))
                                                              (let ((|œÅc1012| (cons |pair54| |Œì|)))
                                                                (labels ((|k11| (|v10|)
                                                                  (let ((|u57| nil))
                                                                    (let ((|pair58| (cons |v6| |u57|)))
                                                                      (let ((|œÅc1015| (cons |pair58| |Œì|)))
                                                                        (labels ((|k13| (|v12|)
                                                                          (let ((|p60| (cons |v10| |v12|)))
                                                                            (let ((|p61| (cons |v8| |p60|)))
                                                                              (let ((|p62| (cons |v6| |p61|)))
                                                                                (funcall |k| |p62|))))))
                                                                          (funcall #'|fn1000| |œÅc1015| #'|k13|)))))))
                                                                  (funcall #'|foldl| |œÅc1012| #'|k11|))))))))))
                                                    (funcall #'|foldl| |œÅc1008| #'|k9|))))))))))
                                      (funcall #'|map| |œÅc1004| #'|k7|))))))))))))))))))))

; driver
(defun |__start| ()
  (format t "~A"
    (funcall #'|main| nil #'identity)))

